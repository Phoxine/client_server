// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"client_server/internal/domain/users"
	"client_server/internal/infrastructure/api/rest"
	persistence2 "client_server/internal/infrastructure/persistence/transactions"
	"client_server/internal/infrastructure/persistence/users/repository"
	"client_server/internal/infrastructure/shared/database"
	"client_server/pkg/config"
	"client_server/pkg/logger"
	"client_server/pkg/utils"
)

import (
	_ "client_server/docs"
)

// Injectors from wire.go:

// InitializeServer is a Wire injector function.
func InitializeServer() (*rest.Server, error) {
	userRepository := persistence.NewPgxUserRepository()
	userService := users.NewUserService(userRepository)
	string2 := configPath()
	clientConfig := config.NewClientConfig(string2)
	pgxPool := database.NewPgxPool(clientConfig)
	transactionService := persistence2.NewPgxTransactionService(pgxPool)
	loggerLogger := logger.NewZapLogger(clientConfig)
	server, err := rest.New(userService, transactionService, loggerLogger, clientConfig)
	if err != nil {
		return nil, err
	}
	return server, nil
}

// wire.go:

func configPath() string {
	return utils.GetEnv("CONFIG_PATH", "config.yaml")
}
